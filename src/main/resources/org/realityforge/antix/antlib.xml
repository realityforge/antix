<?xml version="1.0"?>
<antlib>
  <taskdef name="forEach" classname="org.realityforge.antix.ForEachTask"/>
  <taskdef name="if" classname="org.realityforge.antix.IfTask"/>
  <taskdef name="toAscii" classname="org.realityforge.antix.ToAsciiTask"/>
  <taskdef name="truncate" classname="org.realityforge.antix.TruncateTask"/>
  <taskdef name="selectRegex" classname="org.realityforge.antix.SelectRegexTask"/>
  <taskdef name="timer" classname="org.realityforge.antix.TimerTask"/>

  <!--
  Copy one property to another if the from property is defined.
  Useful for recursive property expansion. 
  -->
  <macrodef name="property-copy">
    <attribute name="name"/>
    <attribute name="from"/>
    <sequential>
      <condition property="@{name}" value="${@{from}}">
        <isset property="@{from}"/>
      </condition>
    </sequential>
  </macrodef>

  <!--
    Output extra debug messages if the property named "debug" is set.
  -->
  <macrodef name="dbgmsg">
    <attribute name="message"/>
    <sequential>
      <if>
        <conditions>
          <isset property="debug"/>
        </conditions>
        <sequential>
          <echo message="@{message}"/>
        </sequential>
      </if>
    </sequential>
  </macrodef>

  <!-- Start phase message. -->
  <macrodef name="start-phase">
    <attribute name="phase"/>
    <sequential>
      <timer property="phase.@{phase}.timer" stop="false"/> 
      <tstamp prefix="phase.@{phase}.start">
        <format property="time" pattern="HH:mm:ss"/>
      </tstamp>
      <condition property="phase.@{phase}.timing.log.level" value="warning" else="verbose">
        <isset property="timing.check"/>
      </condition>
      <echo level="${phase.@{phase}.timing.log.level}">Starting phase '@{phase}' at ${phase.@{phase}.start.time}</echo>
    </sequential>
  </macrodef>

  <macrodef name="end-phase">
    <attribute name="phase"/>
    <sequential>
      <timer property="phase.@{phase}.timer" stop="true"/> 
      <tstamp prefix="phase.@{phase}.end">
        <format property="time" pattern="HH:mm:ss"/>
      </tstamp>
      <echo level="${phase.@{phase}.timing.log.level}">Completing phase '@{phase}' at ${phase.@{phase}.end.time} (Duration = ${phase.@{phase}.timer.duration}ms)</echo>
    </sequential>
  </macrodef>

</antlib>
